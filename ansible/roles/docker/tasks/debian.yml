- name: Debian add Docker repository and update apt cache
  apt_repository:
    repo: deb https://apt.dockerproject.org/repo ubuntu-{{ debian_version }} main
    update_cache: yes
    state: present
  tags: [docker]

- name: Debian CURL is present
  apt:
    name: curl
    state: latest
    force: yes
  tags: [docker]

- name: Debian Docker is present
  apt:
    name: docker-engine
    state: latest
    force: yes
  tags: [docker]

- name: Debian python-pip is present
  apt:
    name: python-pip
    state: present
    force: yes
  tags: [docker]

- name: Debian docker-py is present
  pip:
    name: docker-py
    state: present
  tags: [docker]

- name: Debian files are present
  template:
    src: "{{ docker_cfg }}"
    dest: "{{ docker_cfg_dest }}"
  register: copy_result
  tags: [docker]

# - name: Dock Config
#   lineinfile:
#     dest: /lib/systemd/system/docker.service
#     line: "EnvironmentFile=/etc/default/docker"
#     insertbefore: "^ExecStart="

- name: Dock Config2 
  lineinfile: 
    dest: "/lib/systemd/system/docker.service"
    state: "present"
    regexp: "^ExecStart=/usr/bin/dockerd -H"
    line: 'ExecStart=/usr/bin/dockerd --config-file=/etc/docker/daemon.json'




- name: 'Download Accelerate Docker mirror'
  get_url: url='https://get.daocloud.io/daotools/set_mirror.sh' dest='/var/set_mirror.sh' mode='0755'
  register: mirror_result
  tags: [docker]

#curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://99c6e2d5.m.daocloud.io
- name: 'Execute Accelerate Docker mirror'
  command: cat /var/set_mirror.sh | sh -s http://99c6e2d5.m.daocloud.io
  when: mirror_result.changed
  tags: [docker]

- name: Debian Daemon is reloaded
  command: systemctl daemon-reload
  when: (copy_result|changed) or (mirror_result|changed) and (is_systemd is defined)
  tags: [docker]

- name: ubuntu user is added to the docker group
  user:
    name: ubuntu
    group: docker
  register: user_result
  tags: [docker]

- name: vagrant user is added to the docker group
  user:
    name: vagrant
    group: docker
  register: user_result
  tags: [docker]


- name: Debian Docker service is restarted
  service:
    name: docker
    state: restarted
  when: copy_result|changed or user_result|changed
  tags: [docker]

- name: DockerUI is running
  docker:
    image: uifd/ui-for-docker
    name: dockerui
    ports: 9000:9000
    privileged: yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  when: not skip_ui is defined
  tags: [docker]
